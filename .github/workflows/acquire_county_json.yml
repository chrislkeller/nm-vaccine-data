# This is a basic workflow to help you get started with Actions

name: Acquire daily county vaccine json
# Controls when the action will run.
on:
  schedule:
    # every day at 11:30 pm UTC/4:45 PM in Albuquerque, NM
    - cron:  '45 23 * * *'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  acquire_html:
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks
    # executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      # so your job can access it
      - uses: actions/checkout@main

      # https://github.com/marketplace/actions/install-python-pipenv-and-pipfile-packages
      - name: Install Python, pipenv and Pipfile packages
        uses: palewire/install-python-pipenv-pipfile@v1
        with:
          python-version: '3.8'

      # # Configure Python.
      # - name: Setup Python 3.7.
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.8'

      # - name: Install pipenv
      #   run: |
      #     python -m pip install --upgrade pipenv wheel
      # - id: cache-pipenv
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.local/share/virtualenvs
      #     key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      # - name: Install dependencies
      #   if: steps.cache-pipenv.outputs.cache-hit != 'true'
      #   run: |
      #     pipenv install --deploy --dev

      - name: Run script
        run: |
          pipenv run python 1-county-acquire-daily-json.py
          # pipenv run python 2-county-compile-daily-csv.py
          # pipenv run python 5-county-update-latest-files.py

      # If any new data was fetched, create a new commit to the repo.
      - name: Commit data to repo.
        run: |
          git config --global user.email "christopherlawrencekeller@gmail.com"
          git config --global user.name "chrislkeller"
          git add -A
          timestamp=$(date -u)
          git commit -m "Updates with the latest county-level json data: ${timestamp}" || exit 0
          git push
