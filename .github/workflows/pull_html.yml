# This is a basic workflow to help you get started with Actions

name: Pull vaccine dashboard html
# Controls when the action will run. 
on:
  schedule:
    - cron:  '0 18 * * *' # every day at 5pm

# on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# Allows you to run this workflow manually from the Actions tab
workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  collect-data-job:
    name: Fetch New Tweets
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      # Configure Python. 
      - name: Setup Python 3.7.
        uses: actions/setup-python@v2
        with:
          python-version: '3.8

      # get some Pipenv on
      - name: Pipenv for Github Actions
        # You may pin to the exact commit or the version.
        # uses: VaultVulp/action-pipenv@0e0abc7839b234802947bb8aa1a7c7b8b00a2ff4
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          # pipenv command and its argument to be executed
          command: 
            pipenv install
            pipenv run python acquire-html.py

        # If any new data was fetched, create a new commit to the repo. 
        - name: Commit data to repo.
          run: |
            git config --global user.email "christopherlawrencekeller@gmail.com"
            git config --global user.name "chrislkeller"
            git add -A
            timestamp=$(date -u)
            git commit -m "Latest data: ${timestamp}" || exit 0
            git push
